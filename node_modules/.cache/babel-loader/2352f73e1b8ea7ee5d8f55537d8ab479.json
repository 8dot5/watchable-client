{"ast":null,"code":"var _jsxFileName = \"/Users/chunyi/Development/code/Phase5-Project/watchable-client/src/App.js\",\n    _s = $RefreshSig$();\n\n// Test rails connection and routes\n// localhost:4000 and /testing\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    fetch(\"/hello\") //this works if localhost:3000 is added to the package.json\n    .then(r => r.json()).then(data => setCount(data.count));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/testing\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Test Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Page Count: \", count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chunyi/Development/code/Phase5-Project/watchable-client/src/App.js"],"names":["useState","useEffect","BrowserRouter","Switch","Route","App","count","setCount","fetch","then","r","json","data"],"mappings":";;;AAAA;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,QAAD,CAAL,CAAgB;AAAhB,KACGC,IADH,CACSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADf,EAEGF,IAFH,CAESG,IAAD,IAAUL,QAAQ,CAACK,IAAI,CAACN,KAAN,CAF1B;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE,QAAC,aAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA,iCACE;AAAA,uCAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAvBQD,G;;KAAAA,G;AAyBT,eAAeA,GAAf","sourcesContent":["// Test rails connection and routes\n// localhost:4000 and /testing\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    fetch(\"/hello\") //this works if localhost:3000 is added to the package.json\n      .then((r) => r.json())\n      .then((data) => setCount(data.count));\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/testing\">\n            <h1>Test Route</h1>\n          </Route>\n          <Route path=\"/\">\n            <h1>Page Count: {count}</h1>\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}